{"version":3,"sources":["pages/table.js","pages/modals/rtpModal.js","pages/modals/gameModal.js","pages/modals/customerModal.js","pages/modals/profitModal.js","pages/rtp.js"],"names":["useStyles","makeStyles","theme","root","width","padding","spacing","Datable","props","optionData","columnData","contentData","title","classes","useState","options","setOptions","columns","setColumns","tableData","setTableData","customTitle","setCustomTitle","useEffect","data","className","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","margin","customBtnGroup","Fade","React","forwardRef","ref","open","in","children","onEnter","onExited","other","style","useSpring","from","opacity","to","onStart","onRest","div","EditRtpModal","setOpen","rtpValue","setRtpValue","editRtp","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","id","Grid","container","item","TextField","label","type","defaultValue","onChange","e","target","value","Button","variant","color","onClick","EditGameModal","addStatus","editGame","gameName","setGameName","gameType","setGameType","gameRoute","setGameRoute","winPercentage","setWinPercentage","addNewGameHandle","EditCustomerModal","editCustomer","customerFirstName","customerLastName","customerPhoneNumber","customerEmail","customerProfit","setCustomerFirstName","setCustomerLastName","setCustomerPhoneNumber","setCustomerEmail","setCustomerProfit","addNewCustomerHandle","EditProfitModal","games","customerdata","firstName","gameBank","providerProfit","status","setFirstName","setGameId","setCustomerId","setGameBank","setProviderProfit","setStatus","editProfit","addNewProfitHandle","length","_id","disabled","Switch","checked","name","inputProps","FormControl","formControl","InputLabel","Select","labelId","map","index","MenuItem","console","log","Rtp","introduction","dispatch","useDispatch","rtp","useSelector","state","rtpdata","rtpData","setRtpData","setAddStatus","rtpId","setRtpId","filter","sort","empty","customBodyRender","tableMeta","updateValue","aria-label","rowIndex","rowData","a","API","getRtp","rtp_store","arr","push","game_name","gameData","mainContainer","selectableRows","filterType","responsive","tableBodyWidth","tableBodyHeight","tableBodyMaxHeight"],"mappings":"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","file":"static/js/8.05295122.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        padding: theme.spacing(2)\r\n    }\r\n}))\r\n\r\nfunction Datable(props) {\r\n\r\n    const {\r\n        optionData, \r\n        columnData, \r\n        contentData,\r\n        title\r\n    } = props;\r\n\r\n    const classes = useStyles();\r\n    const [options, setOptions] = useState(optionData);\r\n    const [columns, setColumns] = useState(columnData);\r\n    const [tableData, setTableData] = useState(contentData);\r\n    const [customTitle, setCustomTitle] = useState(title);\r\n\r\n    useEffect(() => {\r\n        setColumns(columnData)\r\n    }, [columnData])\r\n\r\n    useEffect(() => {\r\n        setTableData(contentData)\r\n    }, [contentData])\r\n\r\n    useEffect(() => {\r\n        setOptions(optionData)\r\n    }, [optionData])\r\n\r\n    useEffect(() => {\r\n        setCustomTitle(title)\r\n    }, [title])\r\n\r\n    return (\r\n        <MUIDataTable\r\n            width={100}\r\n            title={customTitle}\r\n            data={tableData}\r\n            columns={columns}\r\n            options={options}\r\n            className={classes.root}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Datable\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// Import Icons\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        width: '100%'\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    customBtnGroup: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n}));\r\n\r\nconst Fade = React.forwardRef(function Fade(props, ref) {\r\n    const {\r\n        in: open,\r\n        children,\r\n        onEnter,\r\n        onExited, ...other\r\n    } = props;\r\n    const style = useSpring({\r\n        from: { opacity: 0 },\r\n        to: { opacity: open ? 1 : 0 },\r\n        onStart: () => {\r\n            if (open && onEnter) {\r\n                onEnter();\r\n            }\r\n        },\r\n        onRest: () => {\r\n            if (!open && onExited) {\r\n                onExited();\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <animated.div ref={ref} style={style} {...other}>\r\n            {children}\r\n        </animated.div>\r\n    );\r\n});\r\n\r\nFade.propTypes = {\r\n    children: PropTypes.element,\r\n    in: PropTypes.bool.isRequired,\r\n    onEnter: PropTypes.func,\r\n    onExited: PropTypes.func,\r\n};\r\n\r\nexport const EditRtpModal = (props) => {\r\n    const {\r\n        open,\r\n        setOpen,\r\n        rtpValue,\r\n        setRtpValue,\r\n        editRtp\r\n    } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"spring-modal-title\"\r\n                aria-describedby=\"spring-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={() => setOpen(!open)}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 200,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <h2 id=\"spring-modal-title\">Edit Rtp Data</h2>\r\n                        <div className={classes.margin}>\r\n                            <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                <Grid item>\r\n                                    <SportsEsportsIcon />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Game Rtp\"\r\n                                        type=\"number\"\r\n                                        defaultValue={rtpValue}\r\n                                        onChange={(e) => setRtpValue(e.target.value)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                        <div className={classes.margin}>\r\n                            <Grid container spacing={1} alignItems=\"flex-end\" className={classes.customBtnGroup}>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" color=\"primary\" \r\n                                        onClick={editRtp}\r\n                                    >\r\n                                        Save\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => setOpen(false)}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// Import Icons\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport StoreMallDirectoryIcon from '@material-ui/icons/StoreMallDirectory';\r\nimport RouterIcon from '@material-ui/icons/Router';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        width: '100%'\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    customBtnGroup: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n}));\r\n\r\nconst Fade = React.forwardRef(function Fade(props, ref) {\r\n    const {\r\n        in: open,\r\n        children,\r\n        onEnter,\r\n        onExited, ...other\r\n    } = props;\r\n    const style = useSpring({\r\n        from: { opacity: 0 },\r\n        to: { opacity: open ? 1 : 0 },\r\n        onStart: () => {\r\n            if (open && onEnter) {\r\n                onEnter();\r\n            }\r\n        },\r\n        onRest: () => {\r\n            if (!open && onExited) {\r\n                onExited();\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <animated.div ref={ref} style={style} {...other}>\r\n            {children}\r\n        </animated.div>\r\n    );\r\n});\r\n\r\nFade.propTypes = {\r\n    children: PropTypes.element,\r\n    in: PropTypes.bool.isRequired,\r\n    onEnter: PropTypes.func,\r\n    onExited: PropTypes.func,\r\n};\r\n\r\nexport const EditGameModal = (props) => {\r\n    const {\r\n        open,\r\n        setOpen,\r\n        addStatus,\r\n        editGame,\r\n        gameName,\r\n        setGameName,\r\n        gameType,\r\n        setGameType,\r\n        gameRoute,\r\n        setGameRoute,\r\n        winPercentage,\r\n        setWinPercentage,\r\n        addNewGameHandle\r\n    } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"spring-modal-title\"\r\n                aria-describedby=\"spring-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={() => setOpen(!open)}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 200,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <h2 id=\"spring-modal-title\">{addStatus === true ? 'Add': 'Edit'} Game</h2>\r\n                        <div className={classes.margin}>\r\n                            <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                <Grid item>\r\n                                    <SportsEsportsIcon />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Game Name\"\r\n                                        defaultValue={gameName}\r\n                                        onChange={(e) => setGameName(e.target.value)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                        <div className={classes.margin}>\r\n                            <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                <Grid item>\r\n                                    <StoreMallDirectoryIcon />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Game Type\"\r\n                                        defaultValue={gameType}\r\n                                        onChange={(e) => setGameType(e.target.value)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                        <div className={classes.margin}>\r\n                            <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                <Grid item>\r\n                                    <RouterIcon />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Game Route\"\r\n                                        defaultValue={gameRoute}\r\n                                        onChange={(e) => setGameRoute(e.target.value)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                        <div className={classes.margin}>\r\n                            <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                <Grid item>\r\n                                    <EmojiPeopleIcon />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Game Win Percentage\"\r\n                                        type=\"number\"\r\n                                        defaultValue={winPercentage}\r\n                                        onChange={(e) => setWinPercentage(e.target.value)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                        <div className={classes.margin}>\r\n                            <Grid container spacing={1} alignItems=\"flex-end\" className={classes.customBtnGroup}>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" color=\"primary\" \r\n                                        onClick={() => {\r\n                                            if(addStatus) {\r\n                                                addNewGameHandle()\r\n                                            } else {\r\n                                                editGame()\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        Save\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => setOpen(false)}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// Import Icons\r\nimport StoreMallDirectoryIcon from '@material-ui/icons/StoreMallDirectory';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        width: '100%'\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    customBtnGroup: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n}));\r\n\r\nconst Fade = React.forwardRef(function Fade(props, ref) {\r\n    const {\r\n        in: open,\r\n        children,\r\n        onEnter,\r\n        onExited, ...other\r\n    } = props;\r\n    const style = useSpring({\r\n        from: { opacity: 0 },\r\n        to: { opacity: open ? 1 : 0 },\r\n        onStart: () => {\r\n            if (open && onEnter) {\r\n                onEnter();\r\n            }\r\n        },\r\n        onRest: () => {\r\n            if (!open && onExited) {\r\n                onExited();\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <animated.div ref={ref} style={style} {...other}>\r\n            {children}\r\n        </animated.div>\r\n    );\r\n});\r\n\r\nFade.propTypes = {\r\n    children: PropTypes.element,\r\n    in: PropTypes.bool.isRequired,\r\n    onEnter: PropTypes.func,\r\n    onExited: PropTypes.func,\r\n};\r\n\r\nexport const EditCustomerModal = (props) => {\r\n    const {\r\n        open,\r\n        setOpen,\r\n        addStatus,\r\n        editCustomer,\r\n        customerFirstName,\r\n        customerLastName,\r\n        customerPhoneNumber,\r\n        customerEmail,\r\n        customerProfit,\r\n        setCustomerFirstName,\r\n        setCustomerLastName,\r\n        setCustomerPhoneNumber,\r\n        setCustomerEmail,\r\n        setCustomerProfit,\r\n        addNewCustomerHandle\r\n    } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"spring-modal-title\"\r\n                aria-describedby=\"spring-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={() => setOpen(!open)}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 200,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <h2 id=\"spring-modal-title\">{addStatus === true ? 'Add': 'Edit'} Customer</h2>\r\n                        <div className={classes.margin}>\r\n                            <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                <Grid item>\r\n                                    <SupervisorAccountIcon />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"First Name\"\r\n                                        defaultValue={customerFirstName}\r\n                                        onChange={(e) => setCustomerFirstName(e.target.value)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                        <div className={classes.margin}>\r\n                            <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                <Grid item>\r\n                                    <SupervisedUserCircleIcon />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Last Name\"\r\n                                        defaultValue={customerLastName}\r\n                                        onChange={(e) => setCustomerLastName(e.target.value)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                        <div className={classes.margin}>\r\n                            <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                <Grid item>\r\n                                    <StoreMallDirectoryIcon />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Phone\"\r\n                                        defaultValue={customerPhoneNumber}\r\n                                        onChange={(e) => setCustomerPhoneNumber(e.target.value)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                        <div className={classes.margin}>\r\n                            <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                <Grid item>\r\n                                    <EmailIcon />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Email\"\r\n                                        defaultValue={customerEmail}\r\n                                        onChange={(e) => setCustomerEmail(e.target.value)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                        <div className={classes.margin}>\r\n                            <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                <Grid item>\r\n                                    <FaceIcon />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        label=\"Provider Profit\"\r\n                                        type=\"number\"\r\n                                        defaultValue={customerProfit}\r\n                                        onChange={(e) => setCustomerProfit(e.target.value)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                        <div className={classes.margin}>\r\n                            <Grid container spacing={1} alignItems=\"flex-end\" className={classes.customBtnGroup}>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" color=\"primary\" \r\n                                        onClick={() => {\r\n                                            if(addStatus) {\r\n                                                addNewCustomerHandle()\r\n                                            } else {\r\n                                                editCustomer()\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        Save\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => setOpen(false)}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n// Import Icons\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport StoreMallDirectoryIcon from '@material-ui/icons/StoreMallDirectory';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        width: '100%'\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    customBtnGroup: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n}));\r\n\r\nconst Fade = React.forwardRef(function Fade(props, ref) {\r\n    const {\r\n        in: open,\r\n        children,\r\n        onEnter,\r\n        onExited, ...other\r\n    } = props;\r\n    const style = useSpring({\r\n        from: { opacity: 0 },\r\n        to: { opacity: open ? 1 : 0 },\r\n        onStart: () => {\r\n            if (open && onEnter) {\r\n                onEnter();\r\n            }\r\n        },\r\n        onRest: () => {\r\n            if (!open && onExited) {\r\n                onExited();\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <animated.div ref={ref} style={style} {...other}>\r\n            {children}\r\n        </animated.div>\r\n    );\r\n});\r\n\r\nFade.propTypes = {\r\n    children: PropTypes.element,\r\n    in: PropTypes.bool.isRequired,\r\n    onEnter: PropTypes.func,\r\n    onExited: PropTypes.func,\r\n};\r\n\r\nexport const EditProfitModal = (props) => {\r\n    const {\r\n        open,\r\n        setOpen,\r\n        addStatus,\r\n        games,\r\n        customerdata,\r\n        firstName,\r\n        gameName,\r\n        gameBank,\r\n        customerProfit,\r\n        providerProfit,\r\n        status,\r\n        setFirstName,\r\n        setGameId,\r\n        setCustomerId,\r\n        setGameName,\r\n        setGameBank,\r\n        setCustomerProfit,\r\n        setProviderProfit,\r\n        setStatus,\r\n        editProfit,\r\n        addNewProfitHandle\r\n    } = props;\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        if(games.length > 0) {\r\n            setGameId(games[0]._id)\r\n        }\r\n    // eslint-disable-next-line\r\n    }, [games])\r\n\r\n    useEffect(() => {\r\n        if(customerdata.length > 0) {\r\n            setCustomerId(customerdata[0]._id)\r\n        }\r\n    // eslint-disable-next-line\r\n    }, [customerdata])\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"spring-modal-title\"\r\n                aria-describedby=\"spring-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={() => setOpen(!open)}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 200,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <h2 id=\"spring-modal-title\">{addStatus === true ? 'Add': 'Edit'} Profit</h2>\r\n                        {\r\n                            addStatus === false ?\r\n                            <>\r\n                                <div className={classes.margin}>\r\n                                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                        <Grid item>\r\n                                            <SportsEsportsIcon />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <TextField\r\n                                                disabled\r\n                                                label=\"First Name\"\r\n                                                defaultValue={firstName}\r\n                                                onChange={(e) => setFirstName(e.target.value)}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                                <div className={classes.margin}>\r\n                                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                        <Grid item>\r\n                                            <StoreMallDirectoryIcon />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <TextField\r\n                                                disabled\r\n                                                label=\"Game Name\"\r\n                                                defaultValue={gameName}\r\n                                                onChange={(e) => setGameName(e.target.value)}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                                <div className={classes.margin}>\r\n                                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                        <Grid item>\r\n                                            <AccountBalanceIcon />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <TextField\r\n                                                label=\"Game Bank\"\r\n                                                defaultValue={gameBank}\r\n                                                type=\"number\"\r\n                                                onChange={(e) => setGameBank(e.target.value)}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                                <div className={classes.margin}>\r\n                                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                        <Grid item>\r\n                                            <AssignmentIndIcon />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <TextField\r\n                                                label=\"Customer Profit\"\r\n                                                defaultValue={customerProfit}\r\n                                                type=\"number\"\r\n                                                onChange={(e) => setCustomerProfit(e.target.value)}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                                <div className={classes.margin}>\r\n                                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                        <Grid item>\r\n                                            <ContactsIcon />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <TextField\r\n                                                label=\"Provider Profit\"\r\n                                                defaultValue={providerProfit}\r\n                                                type=\"number\"\r\n                                                onChange={(e) => setProviderProfit(e.target.value)}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                                <div className={classes.margin}>\r\n                                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                        <Grid item>\r\n                                            <RemoveCircleIcon />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Switch\r\n                                                checked={status === \"true\" ? true : false}\r\n                                                onChange={(e) => {\r\n                                                    setStatus(e.target.checked)\r\n                                                }}\r\n                                                name=\"Game Status\"\r\n                                                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                            </> :\r\n                            <>\r\n                                <div className={classes.margin}>\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Games</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            defaultValue={games[0] ? games[0]._id : \"Game\"}\r\n                                            onChange={(e) => {\r\n                                                setGameId(e.target.value)\r\n                                            }}\r\n                                        >\r\n                                            {\r\n                                                games.length > 0 ?\r\n                                                games.map((item, index) => {\r\n                                                    return <MenuItem value={item._id} key={index}>{item.name}</MenuItem>\r\n                                                }) :\r\n                                                <MenuItem value={'Game'} key={0}>Game</MenuItem>\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div className={classes.margin}>\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Customer</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            defaultValue={customerdata[0] ? customerdata[0]._id : \"Customer\"}\r\n                                            onChange={(e) => {\r\n                                                console.log(e.target.value)\r\n                                                setCustomerId(e.target.value)\r\n                                            }}\r\n                                        >\r\n                                            {\r\n                                                customerdata.length > 0 ?\r\n                                                customerdata.map((item, index) => {\r\n                                                    return <MenuItem value={item._id} key={index}>{item.firstName}</MenuItem>\r\n                                                }) :\r\n                                                <MenuItem value={'Customer'} key={0}>Customer</MenuItem>\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                        <div className={classes.margin}>\r\n                            <Grid container spacing={1} alignItems=\"flex-end\" className={classes.customBtnGroup}>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" color=\"primary\" \r\n                                        onClick={() => {\r\n                                            if(addStatus) {\r\n                                                addNewProfitHandle()\r\n                                            } else {\r\n                                                editProfit()\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        Save\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => setOpen(false)}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import { useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\r\n\r\n// import { History } from '../theme'\r\nimport MDataTable from './table'\r\nimport { EditRtpModal } from './modals'\r\nimport useStyles from '../assets/styles';\r\nimport { rtp_store } from \"../redux/actions/rtp\";\r\nimport { API } from '../hooks';\r\n\r\nexport default function Rtp() {\r\n\tconst classes = useStyles.introduction()\r\n\tconst dispatch = useDispatch()\r\n\tconst rtp = useSelector(state => state.rtp.rtpdata)\r\n\r\n\tconst [rtpData, setRtpData] = useState([])\r\n\tconst [open, setOpen] = useState(false)\r\n\tconst [addStatus, setAddStatus] = useState(false)\r\n\tconst [rtpId, setRtpId] = useState(\"\")\r\n\tconst [rtpValue, setRtpValue] = useState(\"\")\r\n\r\n\tconst options = {\r\n\t\tselectableRows: false,\r\n\t\tfilter: true,\r\n\t\tfilterType: \"textField\",\r\n\t\tresponsive: \"vertical\",\r\n\t\ttableBodyWidth: \"100%\",\r\n\t\ttableBodyHeight: \"100%\",\r\n\t\ttableBodyMaxHeight: \"\"\r\n\t};\r\n\r\n\tconst columnData = [\r\n\t\t{\r\n\t\t\tname: 'game_name',\r\n\t\t\tlabel: \"Game Name\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'rtp',\r\n\t\t\tlabel: \"Return To Player (%)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Edit\",\r\n\t\t\toptions: {\r\n\t\t\t\tfilter: true,\r\n\t\t\t\tsort: false,\r\n\t\t\t\tempty: true,\r\n\t\t\t\tcustomBodyRender: (value, tableMeta, updateValue) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\taria-label=\"edit to shopping cart\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetAddStatus(false)\r\n\t\t\t\t\t\t\t\tsetRtpId(rtp[tableMeta.rowIndex]._id)\r\n\t\t\t\t\t\t\t\tsetRtpValue(tableMeta.rowData[1])\r\n\t\t\t\t\t\t\t\tsetOpen(true)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<LoyaltyIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n\r\n\tconst editRtp = async () => {\r\n\t\tawait API.editRtp({\r\n\t\t\trtp: rtpValue\r\n\t\t}, rtpId)\r\n\t\tvar data = await API.getRtp();\r\n\t\tdispatch(rtp_store(data.data))\r\n\t\tsetOpen(false)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tvar arr = []\r\n\t\trtp.filter(item => {\r\n\t\t\tarr.push({\r\n\t\t\t\t_id: item._id,\r\n\t\t\t\tgame_name: item.gameData.name,\r\n\t\t\t\trtp: item.rtp\r\n\t\t\t})\r\n\t\t\treturn item\r\n\t\t})\r\n\t\tsetRtpData(arr)\r\n\t}, [rtp])\r\n\r\n\treturn (\r\n\t\t<Grid container spacing={2} className={classes.mainContainer}>\r\n\t\t\t<MDataTable\r\n\t\t\t\ttitle={\"RTP\"}\r\n\t\t\t\toptionData={options}\r\n\t\t\t\tcolumnData={columnData}\r\n\t\t\t\tcontentData={rtpData}\r\n\t\t\t\topen={open}\r\n\t\t\t/>\r\n\t\t\t<EditRtpModal\r\n\t\t\t\taddStatus={addStatus}\r\n\t\t\t\topen={open}\r\n\t\t\t\trtpValue={rtpValue}\r\n\t\t\t\tsetRtpValue={setRtpValue}\r\n\t\t\t\teditRtp={editRtp}\r\n\t\t\t\tsetOpen={setOpen}\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t);\r\n}"],"sourceRoot":""}