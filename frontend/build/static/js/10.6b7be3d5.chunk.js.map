{"version":3,"sources":["pages/table.js","redux/actions/betHistory/index.js","pages/betHistory.js"],"names":["useStyles","makeStyles","theme","root","width","padding","spacing","Datable","props","optionData","columnData","contentData","title","classes","useState","options","setOptions","columns","setColumns","tableData","setTableData","customTitle","setCustomTitle","useEffect","data","className","bet_history_store","params","dispatch","type","BETHISTORY","payload","BetHistory","introduction","useDispatch","betHistories","useSelector","state","betHistory","betHistoryData","setBetHistoryData","open","name","label","customBodyRender","value","tableMeta","updateValue","Date","rowData","toLocaleString","loadBetHistory","n_bets","i","length","push","game_name","game_id","customer_name","customer_id","firstName","win_amount","bet_amount","date","a","API","getBetHistory","Grid","container","mainContainer","console","log","selectableRows","filter","filterType","responsive","tableBodyWidth","tableBodyHeight","tableBodyMaxHeight"],"mappings":"kLAIMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,MAAO,OACPC,QAASH,EAAMI,QAAQ,QA+ChBC,IA3Cf,SAAiBC,GAEb,IACIC,EAIAD,EAJAC,WACAC,EAGAF,EAHAE,WACAC,EAEAH,EAFAG,YACAC,EACAJ,EADAI,MAGEC,EAAUb,IAChB,EAA8Bc,mBAASL,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAASJ,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAkCJ,mBAASH,GAA3C,mBAAOQ,EAAP,KAAkBC,EAAlB,KACA,EAAsCN,mBAASF,GAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KAkBA,OAhBAC,qBAAU,WACNL,EAAWR,KACZ,CAACA,IAEJa,qBAAU,WACNH,EAAaT,KACd,CAACA,IAEJY,qBAAU,WACNP,EAAWP,KACZ,CAACA,IAEJc,qBAAU,WACND,EAAeV,KAChB,CAACA,IAGA,cAAC,IAAD,CACIR,MAAO,IACPQ,MAAOS,EACPG,KAAML,EACNF,QAASA,EACTF,QAASA,EACTU,UAAWZ,EAAQV,S,qKC/ClBuB,EAAoB,SAACC,GAC9B,OAAO,SAAAC,GAAQ,OACXA,EAAS,CACLC,KAAOC,IACPC,QAAUJ,M,eCIP,SAASK,IACvB,IAAMnB,EAAUb,IAAUiC,eACpBL,EAAWM,cACXC,EAAeC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAWA,cAExD,EAA4CxB,mBAAS,IAArD,mBAAOyB,EAAP,KAAuBC,EAAvB,KACH,EAAe1B,oBAAS,GAAjB2B,EAAP,oBAYM/B,EAAa,CAClB,CACCgC,KAAM,YACNC,MAAO,aAER,CACCD,KAAM,gBACNC,MAAO,iBAER,CACCD,KAAM,aACNC,MAAO,cAER,CACCD,KAAM,aACNC,MAAO,cAER,CACCD,KAAM,OACNC,MAAO,OACE5B,QAAS,CACL6B,iBAAkB,SAACC,EAAOC,EAAWC,GACjC,OACI,IAAIC,KAAKF,EAAUG,QAAQ,IAAIC,qBAOtD3B,qBAAU,WACH4B,MACJ,IAEA5B,qBAAU,WAEN,IADA,IAAI6B,EAAS,GACJC,EAAI,EAAGA,EAAIlB,EAAamB,OAAQD,IACrCD,EAAOG,KAAK,CACRC,UAAWrB,EAAakB,GAAGI,QAAQf,KACnCgB,cAAevB,EAAakB,GAAGM,YAAYC,UAC3CC,WAAY1B,EAAakB,GAAGQ,WAC5BC,WAAY3B,EAAakB,GAAGS,WAC5BC,KAAM5B,EAAakB,GAAGU,OAG9BvB,EAAkBY,KACnB,CAACjB,IAEJ,IAAMgB,EAAc,uCAAG,4BAAAa,EAAA,sEACFC,IAAIC,gBADF,OACf1C,EADe,OAEzBI,EAASF,EAAkBF,EAAKA,OAFP,2CAAH,qDAKvB,OACC,eAAC2C,EAAA,EAAD,CAAMC,WAAS,EAAC9D,QAAS,EAAGmB,UAAWZ,EAAQwD,cAA/C,UAEUC,QAAQC,IAAIhC,GAErB,cAAC,IAAD,CACC3B,MAAO,MACPH,WAtEa,CACf+D,gBAAgB,EAChBC,QAAQ,EACRC,WAAY,YACZC,WAAY,WACZC,eAAgB,OAChBC,gBAAiB,OACjBC,mBAAoB,IAgElBpE,WAAYA,EACZC,YAAa4B,EACbE,KAAMA","file":"static/js/10.6b7be3d5.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        padding: theme.spacing(2)\r\n    }\r\n}))\r\n\r\nfunction Datable(props) {\r\n\r\n    const {\r\n        optionData, \r\n        columnData, \r\n        contentData,\r\n        title\r\n    } = props;\r\n\r\n    const classes = useStyles();\r\n    const [options, setOptions] = useState(optionData);\r\n    const [columns, setColumns] = useState(columnData);\r\n    const [tableData, setTableData] = useState(contentData);\r\n    const [customTitle, setCustomTitle] = useState(title);\r\n\r\n    useEffect(() => {\r\n        setColumns(columnData)\r\n    }, [columnData])\r\n\r\n    useEffect(() => {\r\n        setTableData(contentData)\r\n    }, [contentData])\r\n\r\n    useEffect(() => {\r\n        setOptions(optionData)\r\n    }, [optionData])\r\n\r\n    useEffect(() => {\r\n        setCustomTitle(title)\r\n    }, [title])\r\n\r\n    return (\r\n        <MUIDataTable\r\n            width={100}\r\n            title={customTitle}\r\n            data={tableData}\r\n            columns={columns}\r\n            options={options}\r\n            className={classes.root}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Datable\r\n","import { BETHISTORY } from \"../../constants\";\r\n\r\nexport const bet_history_store = (params) => {\r\n    return dispatch => (\r\n        dispatch({\r\n            type : BETHISTORY,\r\n            payload : params\r\n        })\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n// import { History } from '../theme'\r\nimport MDataTable from './table'\r\nimport useStyles from '../assets/styles';\r\nimport { bet_history_store } from \"../redux/actions/betHistory\";\r\nimport { API } from '../hooks';\r\n\r\nexport default function BetHistory() {\r\n\tconst classes = useStyles.introduction()\r\n\tconst dispatch = useDispatch()\r\n\tconst betHistories = useSelector(state => state.betHistory.betHistory)\r\n\r\n    const [betHistoryData, setBetHistoryData] = useState([])\r\n\tconst [open] = useState(false)\r\n\r\n\tconst options = {\r\n\t\tselectableRows: false,\r\n\t\tfilter: true,\r\n\t\tfilterType: \"textField\",\r\n\t\tresponsive: \"vertical\",\r\n\t\ttableBodyWidth: \"100%\",\r\n\t\ttableBodyHeight: \"100%\",\r\n\t\ttableBodyMaxHeight: \"\"\r\n\t};\r\n\r\n\tconst columnData = [\r\n\t\t{\r\n\t\t\tname: 'game_name',\r\n\t\t\tlabel: \"Game Name\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'customer_name',\r\n\t\t\tlabel: \"Customer Name\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'bet_amount',\r\n\t\t\tlabel: \"Bet Amount\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'win_amount',\r\n\t\t\tlabel: \"Win Amount\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'date',\r\n\t\t\tlabel: \"Date\",\r\n            options: {\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        new Date(tableMeta.rowData[4]).toLocaleString()\r\n                    )\r\n                }\r\n            }\r\n\t\t}\r\n\t]\r\n\r\n\tuseEffect(() => {\r\n        loadBetHistory()\r\n\t}, [])\r\n\r\n    useEffect(() => {\r\n        var n_bets = [];\r\n        for (let i = 0; i < betHistories.length; i++) {\r\n            n_bets.push({\r\n                game_name: betHistories[i].game_id.name,\r\n                customer_name: betHistories[i].customer_id.firstName,\r\n                win_amount: betHistories[i].win_amount,\r\n                bet_amount: betHistories[i].bet_amount,\r\n                date: betHistories[i].date,\r\n            })\r\n        }\r\n        setBetHistoryData(n_bets)\r\n    }, [betHistories])\r\n\t\r\n    const loadBetHistory = async () => {\r\n        var data = await API.getBetHistory();\r\n\t\tdispatch(bet_history_store(data.data))\r\n    }\r\n\r\n\treturn (\r\n\t\t<Grid container spacing={2} className={classes.mainContainer}>\r\n        {\r\n            console.log(betHistoryData)\r\n        }\r\n\t\t\t<MDataTable\r\n\t\t\t\ttitle={\"RTP\"}\r\n\t\t\t\toptionData={options}\r\n\t\t\t\tcolumnData={columnData}\r\n\t\t\t\tcontentData={betHistoryData}\r\n\t\t\t\topen={open}\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t);\r\n}"],"sourceRoot":""}